#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick-tap-ms = <200>; };

&mt { quick-tap-ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LCTRL ESC     &kp Q  &kp W  &kp E              &kp R               &kp T        &kp Y              &kp U                &kp I        &kp O    &kp P     &kp LBKT
&mt LEFT_ALT TAB  &kp A  &kp S  &kp D              &kp F               &kp G        &kp H              &kp J                &kp K        &kp L    &kp SEMI  &mt RIGHT_ALT SQT
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C              &kp V               &kp B        &kp N              &kp M                &kp COMMA    &kp DOT  &kp FSLH  &mt RIGHT_SHIFT BSLH
                                &lt RSE BACKSPACE  &mt LEFT_GUI SPACE  &lt LWR RET  &lt LWR BACKSPACE  &mt RIGHT_GUI SPACE  &lt RSE RET
            >;
        };

        lower_layer {
            bindings = <
&gresc              &kp F1    &kp F2  &kp F3    &kp F4    &kp F5     &kp F6     &kp F7    &kp F8    &kp F9    &kp F10   &kp RIGHT_BRACKET
&mt LEFT_ALT GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT  &kp CARET  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &mt RCTRL MINUS
&trans              &kp N1    &kp N2  &kp N3    &kp N4    &kp N5     &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &mt RIGHT_SHIFT EQUAL
                                      &trans    &trans    &trans     &trans     &trans    &trans
            >;
        };

        raise_layer {
            bindings = <
&trans              &kp KP_SLASH     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MINUS  &kp PG_UP          &kp HOME       &kp UP    &kp END     &kp PAGE_DOWN   &none
&mt LEFT_ALT EQUAL  &kp KP_MULTIPLY  &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_PLUS   &kp LA(LEFT)       &kp LEFT       &kp DOWN  &kp RIGHT   &kp RA(RIGHT)   &trans
&kp LALT            &kp KP_N0        &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT    &kp LA(BACKSPACE)  &kp BACKSPACE  &none     &kp DELETE  &kp LA(DELETE)  &trans
                                                &trans     &trans     &trans        &trans             &trans         &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &kp RS(RA(RC(RG(Q))))  &kp RS(RA(RC(RG(W))))  &kp RS(RA(RC(RG(E))))  &kp RS(RA(RC(RG(R))))  &kp RS(RA(RC(RG(T))))  &none  &none   &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&none        &kp RS(RC(RA(RG(A))))  &kp RS(RA(RC(RG(S))))  &kp RS(RA(RC(RG(D))))  &kp RS(RA(RC(RG(F))))  &kp RS(RA(RC(RG(G))))  &none  &none   &none         &none         &none         &none
&sys_reset   &kp RS(RA(RC(RG(Z))))  &kp RS(RA(RC(RG(X))))  &kp RS(RA(RC(RG(C))))  &kp RS(RA(RC(RG(V))))  &kp RS(RA(RC(RG(B))))  &none  &none   &none         &none         &none         &sys_reset
                                                           &trans                 &none                  &trans                 &none  &trans  &trans
            >;
        };
    };
};
